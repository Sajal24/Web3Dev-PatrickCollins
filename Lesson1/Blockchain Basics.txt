Blockchain was introduced for BitCoin first
But in 2014, Vitalik took this idea forward and with other cofounders released Ethereum in 2015 - adding the concept of decentralized organizations and decentralized agreements(smart contracts) with its Blockchain.

Originally Nick Szabo came with the idea of smart contracts in 1994.

therefore the main difference between the bitcoin protocol and the ethereum protocol is Smart contracts

basically bitcoin does have smart contracts but they are intentionally turing incomplete - meaning they don't have all the functionality that a programming language would give them
this is coz bitcoin devs saw bitcoin blockchain as a store of value while ethereum devs saw it as both store of value and a utility for facilitating the decentralized concept



The Oracle Problem:
Blockchain needs real world data inorder to work full-fledgedly but it itself can't interact with the real world 

*Blockchain Oracle - any device that interacts with the off-chain world(real world)  and provides external data and external computations to the smart contracts(blockchain).
but we can't rely on a single oracle to provide this - can't stay truly decentralized when we only have one oracle, can we?

therefore we should have decentralized oracles bringing external data and external computations to the smart contracts - making sure we are decentralized end to end
hence mixing both decentralized blockchain with decentralized oracle network gives rise to the concept of Hybrid smart contracts.

Hybrid Smart Contracts = OnChain + OffChain Agreements
(onchain code + offchain systems[triggering the onchain system, take actions on behalf of the contract, return proof that the action was taken])
[check this - https://blog.chain.link/hybrid-smart-contracts-explained/]

*dApp - decentralized applications - mainly the combination of many smart contracts
dapp = decentralized applications = decentralized protocol = smar contract



WHAT IS THE PURPOSE OF SMART CONTRACTS?
They create trust minimized agreements giving rise to unbreakable promises - speed, efficiency, immutability and transparency



SMART CONTRACT
An agreement, contract, or set of instructions that is deployed on a decentralized blockchain
- cannot be altered(immutable)
- automatically executes
- everyone sees the terms of the agreement



EtherScan
A Block explorer - a way to view different address, transactions and other happenings that happen with a blockchain



Introduction to Gas
When we make transactions, the miners or validators make a small fee
the fee depends on how much of gas you use

Gas: a unit of computational measurement
the more complex your transaction is, the more gas you have to pay.
Transaction price = Gas Price x Gas usage

Depending on how busy the blockchain is, how much traffic the network has - you have to pay more gas fee
more people sending transactions at the same time means more gas costs

 

HOW DO BLOCKCHAIN WORKS
The Genesis block - first block in the blockchain

Hash: Unique fixed length string to identify a piece of data

Hash Algorithm: A algorithm/function that computes the data into a unique hash

Mining: The process of finding the "solution" to the blockchain "problem".
        here, problem was to find a hash that starts with four zeroes
        [problems can be different depinding on blockchain to blockchain]

        Nodes get paid for mining blocks

Block: A list of transactions mined together

Decentralized: having no single point of authority

Nonce: A "number used once" to find the "solution" to the blockchain    problem.
       Also used to define the number of transactions for an account/address (in ethereum).

the last block's hash of each peer is compared and verified and if any of the peers had done something malicious/changed some data - then the hash of that block will change -> changing the hashes of all the block ahead of it, therefore last block's hash won't match other peers last block's hash.

that peer will be thrown out - as its whole blockchain will get invalidated - as changing data -> now we have to compute/mine a new nonce that will along with data and block number give us a new hash starting with 0000 - now same process with all the blocks following/ahead of that block - already enough computatinal power needed 


now it explains my doubt of what is a 51% attack?
basically if 51% of the peer network collectively changes the data, they'll succeed while throwing off the remaining good 49% peers. not possible though to generate enough computational power collectively as changing data and generating a new nonce so that the hash starts with 4 zeroes requires computational power.

The longer the blockchain gets, the harder it begins to tamper with and it becomes more secure



SIGNING TRANSACTIONS
Private Key: Only known to the key holder, it's used to "sign" transactions

Public Key: Anyone can see it, and it is used to verify that a transaction came from you - is derived from private key

Signing a transaction: A "one way process" (meaning you can't obtain private key again) - a private key hashed with transaction data is used as a "message signature" - then anyone can verify this transaction hash (message signature) using our public key. 

Private key is used to generate the public key using the Elliptical Curve Digital Signature Algorithm, a variant of the Digital Signature Algorithm(DSA - which uses elliptic curve cryptography) - both Bitcoin and Ethereum uses this algorithm

Your address in Ethereum is derived when your public key is hashed with Keccak256 hashing algorithm and taking the last 20bits

Private key > Public Key > Address



GAS II: BLOCK REWARDS & EIP 1559
Base Fee: The minimum *gas price* to send your transaction

EIP 1559 - Ethereum Improvement Proposal
This one's for the gas fee model

But will EIP 1559 make gas fee lower?
NO -> rather it will optimize the existing gas fee structure
- 1. Smoothening gas fee spikes
  2. Limiting the number of overpaid transactions.

Basically, acc to this proposal => instead of the existing model where the user giving the highest bid of gas fee wins and therefore his/her transaction is included in the block/priortized, where the ones who already gave the older gas fee have to wait a long long time now - the new model says that when the traffic starts increasing in the network, first the block size is increased** - increasing the capacity of gas and number of transactions that can be included -> and subsequently the base gas fee is increased -> therefore after 20 blocks it will increase by 50x, and so on and therefore will remove users from participating, hence decreasing the traffic
also, earlier the gas fee and the block reward was given to the miner but now the gas fee is burnt, that is making the overall availability of ethereum low, hence benefitting users as the eth they hold are of a greater value now, and the miners get the block reward and miner tip, that a user can decide the amount of -> hence low profit for the miners.

**IF the blocks are less than 50% full -> gas fee decreases
  IF the blocks are more than 50% full -> gas fee increases

BUT the way to lower the gas fee is eth2.0 and layer2 solutions

*Transaction Fee: (Block BaseFee Per Gas + MaxPriorityFee Per Gas)  *  Gas used
*Gas Price: Cost of one unit of gas
*Gas Limit: Maximum amount of units of gas we are willing to pay in this transaction



HIGH LEVEL BLOCKCHAIN FUNDAMENTALS
