{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "s_priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "s_addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x62734ea9bafcb586e1646e6522c864ef867c9b8fa054a748ec26814de6234d3a",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "986869",
    "logsBloom": "0x
    "blockHash": "0x03150e85a02a5663ead622ac79331cba661652614b53c8fc2338e39e332f50f1",
    "transactionHash": "0x62734ea9bafcb586e1646e6522c864ef867c9b8fa054a748ec26814de6234d3a",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "986869",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "d79b9ecc7b1c1e150181e758c4fb0b3b",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"s_priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Shlan\",\"details\":\"This implements price feeds as our library\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A sample Funding Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"Funds our contract based on the ETH/USD price\"}},\"notice\":\"This contract is for creating a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\n\\n/**@title A sample Funding Contract\\n * @author Shlan\\n * @notice This contract is for creating a sample funding contract\\n * @dev This implements price feeds as our library\\n */ \\ncontract FundMe {\\n    //Type declarations\\n    using PriceConverter for uint256;\\n\\n    //State variables\\n    mapping(address => uint256) public s_addressToAmountFunded;\\n    address[] public s_funders;\\n    address public immutable  i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n\\n    AggregatorV3Interface public s_priceFeed;\\n    \\n    //Modifiers \\n    modifier onlyOwner {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    //Functions:\\n        // constructor\\n        // receive\\n        // fallback\\n        // external\\n        // public\\n        // internal\\n        // private\\n        // view/pure\\n\\n    constructor(address s_priceFeedAddress) { \\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(s_priceFeedAddress);\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n    \\n  /// @notice Funds our contract based on the ETH/USD price\\n    function fund() public payable {\\n        require(msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n    \\n    \\n    \\n    function withdraw() public onlyOwner {\\n        for (uint256 funderIndex=0; funderIndex < s_funders.length; funderIndex++){\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        \\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n    \\n    function cheaperWithdraw() public onlyOwner{\\n        address[] memory funders = s_funders;\\n        for(uint funderIndex=0;funderIndex<funders.length;funderIndex++){\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder]=0;\\n        }\\n        s_funders = new address[](0);\\n        (bool callSuccess, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n\\n    }\\n\\n}\",\"keccak256\":\"0x3a3cf22bce63356f2b40577b2b3c63cfcdb2b11815349d716316b0a06f4cd3a8\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\n        // Goerli ETH / USD Address\\n        // https://docs.chain.link/docs/ethereum-addresses/\\n        \\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n        // or (Both will do the same thing)\\n        // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // or (Both will do the same thing)\\n        // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\",\"keccak256\":\"0x95de5ce4a403347916b498cef877d7881708a6446121a8a24ea545e1e8e1ec71\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620011fc380380620011fc83398181016040528101906200003791906200011d565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200014f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e582620000b8565b9050919050565b620000f781620000d8565b81146200010357600080fd5b50565b6000815190506200011781620000ec565b92915050565b600060208284031215620001365762000135620000b3565b5b6000620001468482850162000106565b91505092915050565b60805161107c6200018060003960008181610345015281816105d1015281816107c70152610895015261107c6000f3fe60806040526004361061007f5760003560e01c80636b69a5921161004e5780636b69a59214610154578063b60d42881461017f578063be2693f014610189578063dba6335f146101a05761008e565b80630ec3b027146100985780631bf6132d146100c35780633ccfd60b1461010057806354861af7146101175761008e565b3661008e5761008c6101cb565b005b6100966101cb565b005b3480156100a457600080fd5b506100ad610305565b6040516100ba9190610aaa565b60405180910390f35b3480156100cf57600080fd5b506100ea60048036038101906100e59190610b08565b61032b565b6040516100f79190610b4e565b60405180910390f35b34801561010c57600080fd5b50610115610343565b005b34801561012357600080fd5b5061013e60048036038101906101399190610b95565b610583565b60405161014b9190610bd1565b60405180910390f35b34801561016057600080fd5b506101696105c2565b6040516101769190610b4e565b60405180910390f35b6101876101cb565b005b34801561019557600080fd5b5061019e6105cf565b005b3480156101ac57600080fd5b506101b5610893565b6040516101c29190610bd1565b60405180910390f35b6802b5e3af16b188000061020a600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108b790919063ffffffff16565b101561024b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024290610c49565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102999190610c98565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103c8576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610473576000600182815481106103ee576103ed610ccc565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061046b90610cfb565b9150506103cb565b50600067ffffffffffffffff81111561048f5761048e610d43565b5b6040519080825280602002602001820160405280156104bd5781602001602082028036833780820191505090505b50600190805190602001906104d3929190610984565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104fa90610da3565b60006040518083038185875af1925050503d8060008114610537576040519150601f19603f3d011682016040523d82523d6000602084013e61053c565b606091505b5050905080610580576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057790610e04565b60405180910390fd5b50565b6001818154811061059357600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610654576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156106d857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161068e575b5050505050905060005b8151811015610762576000828281518110610700576106ff610ccc565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061075a90610cfb565b9150506106e2565b50600067ffffffffffffffff81111561077e5761077d610d43565b5b6040519080825280602002602001820160405280156107ac5781602001602082028036833780820191505090505b50600190805190602001906107c2929190610984565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161080990610da3565b60006040518083038185875af1925050503d8060008114610846576040519150601f19603f3d011682016040523d82523d6000602084013e61084b565b606091505b505090508061088f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088690610e04565b60405180910390fd5b5050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000806108c3836108f3565b90506000670de0b6b3a764000085836108dc9190610e24565b6108e69190610e95565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610941573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109659190610f53565b5050509150506402540be4008161097c9190610fce565b915050919050565b8280548282559060005260206000209081019282156109fd579160200282015b828111156109fc5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109a4565b5b509050610a0a9190610a0e565b5090565b5b80821115610a27576000816000905550600101610a0f565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610a70610a6b610a6684610a2b565b610a4b565b610a2b565b9050919050565b6000610a8282610a55565b9050919050565b6000610a9482610a77565b9050919050565b610aa481610a89565b82525050565b6000602082019050610abf6000830184610a9b565b92915050565b600080fd5b6000610ad582610a2b565b9050919050565b610ae581610aca565b8114610af057600080fd5b50565b600081359050610b0281610adc565b92915050565b600060208284031215610b1e57610b1d610ac5565b5b6000610b2c84828501610af3565b91505092915050565b6000819050919050565b610b4881610b35565b82525050565b6000602082019050610b636000830184610b3f565b92915050565b610b7281610b35565b8114610b7d57600080fd5b50565b600081359050610b8f81610b69565b92915050565b600060208284031215610bab57610baa610ac5565b5b6000610bb984828501610b80565b91505092915050565b610bcb81610aca565b82525050565b6000602082019050610be66000830184610bc2565b92915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610c33601b83610bec565b9150610c3e82610bfd565b602082019050919050565b60006020820190508181036000830152610c6281610c26565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ca382610b35565b9150610cae83610b35565b9250828201905080821115610cc657610cc5610c69565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d0682610b35565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610d3857610d37610c69565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d8d600083610d72565b9150610d9882610d7d565b600082019050919050565b6000610dae82610d80565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610dee600b83610bec565b9150610df982610db8565b602082019050919050565b60006020820190508181036000830152610e1d81610de1565b9050919050565b6000610e2f82610b35565b9150610e3a83610b35565b9250828202610e4881610b35565b91508282048414831517610e5f57610e5e610c69565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ea082610b35565b9150610eab83610b35565b925082610ebb57610eba610e66565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610ee581610ec6565b8114610ef057600080fd5b50565b600081519050610f0281610edc565b92915050565b6000819050919050565b610f1b81610f08565b8114610f2657600080fd5b50565b600081519050610f3881610f12565b92915050565b600081519050610f4d81610b69565b92915050565b600080600080600060a08688031215610f6f57610f6e610ac5565b5b6000610f7d88828901610ef3565b9550506020610f8e88828901610f29565b9450506040610f9f88828901610f3e565b9350506060610fb088828901610f3e565b9250506080610fc188828901610ef3565b9150509295509295909350565b6000610fd982610f08565b9150610fe483610f08565b9250828202610ff281610f08565b91507f8000000000000000000000000000000000000000000000000000000000000000841460008412161561102a57611029610c69565b5b828205841483151761103f5761103e610c69565b5b509291505056fea2646970667358221220bb11a1a7fcff760c59164571f40a50ad3bd30537f55dfc8e1933ed0208f3941e64736f6c63430008110033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c80636b69a5921161004e5780636b69a59214610154578063b60d42881461017f578063be2693f014610189578063dba6335f146101a05761008e565b80630ec3b027146100985780631bf6132d146100c35780633ccfd60b1461010057806354861af7146101175761008e565b3661008e5761008c6101cb565b005b6100966101cb565b005b3480156100a457600080fd5b506100ad610305565b6040516100ba9190610aaa565b60405180910390f35b3480156100cf57600080fd5b506100ea60048036038101906100e59190610b08565b61032b565b6040516100f79190610b4e565b60405180910390f35b34801561010c57600080fd5b50610115610343565b005b34801561012357600080fd5b5061013e60048036038101906101399190610b95565b610583565b60405161014b9190610bd1565b60405180910390f35b34801561016057600080fd5b506101696105c2565b6040516101769190610b4e565b60405180910390f35b6101876101cb565b005b34801561019557600080fd5b5061019e6105cf565b005b3480156101ac57600080fd5b506101b5610893565b6040516101c29190610bd1565b60405180910390f35b6802b5e3af16b188000061020a600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108b790919063ffffffff16565b101561024b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024290610c49565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102999190610c98565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103c8576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610473576000600182815481106103ee576103ed610ccc565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061046b90610cfb565b9150506103cb565b50600067ffffffffffffffff81111561048f5761048e610d43565b5b6040519080825280602002602001820160405280156104bd5781602001602082028036833780820191505090505b50600190805190602001906104d3929190610984565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104fa90610da3565b60006040518083038185875af1925050503d8060008114610537576040519150601f19603f3d011682016040523d82523d6000602084013e61053c565b606091505b5050905080610580576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057790610e04565b60405180910390fd5b50565b6001818154811061059357600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610654576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156106d857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161068e575b5050505050905060005b8151811015610762576000828281518110610700576106ff610ccc565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061075a90610cfb565b9150506106e2565b50600067ffffffffffffffff81111561077e5761077d610d43565b5b6040519080825280602002602001820160405280156107ac5781602001602082028036833780820191505090505b50600190805190602001906107c2929190610984565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161080990610da3565b60006040518083038185875af1925050503d8060008114610846576040519150601f19603f3d011682016040523d82523d6000602084013e61084b565b606091505b505090508061088f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088690610e04565b60405180910390fd5b5050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000806108c3836108f3565b90506000670de0b6b3a764000085836108dc9190610e24565b6108e69190610e95565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610941573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109659190610f53565b5050509150506402540be4008161097c9190610fce565b915050919050565b8280548282559060005260206000209081019282156109fd579160200282015b828111156109fc5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109a4565b5b509050610a0a9190610a0e565b5090565b5b80821115610a27576000816000905550600101610a0f565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610a70610a6b610a6684610a2b565b610a4b565b610a2b565b9050919050565b6000610a8282610a55565b9050919050565b6000610a9482610a77565b9050919050565b610aa481610a89565b82525050565b6000602082019050610abf6000830184610a9b565b92915050565b600080fd5b6000610ad582610a2b565b9050919050565b610ae581610aca565b8114610af057600080fd5b50565b600081359050610b0281610adc565b92915050565b600060208284031215610b1e57610b1d610ac5565b5b6000610b2c84828501610af3565b91505092915050565b6000819050919050565b610b4881610b35565b82525050565b6000602082019050610b636000830184610b3f565b92915050565b610b7281610b35565b8114610b7d57600080fd5b50565b600081359050610b8f81610b69565b92915050565b600060208284031215610bab57610baa610ac5565b5b6000610bb984828501610b80565b91505092915050565b610bcb81610aca565b82525050565b6000602082019050610be66000830184610bc2565b92915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610c33601b83610bec565b9150610c3e82610bfd565b602082019050919050565b60006020820190508181036000830152610c6281610c26565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ca382610b35565b9150610cae83610b35565b9250828201905080821115610cc657610cc5610c69565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d0682610b35565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610d3857610d37610c69565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d8d600083610d72565b9150610d9882610d7d565b600082019050919050565b6000610dae82610d80565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610dee600b83610bec565b9150610df982610db8565b602082019050919050565b60006020820190508181036000830152610e1d81610de1565b9050919050565b6000610e2f82610b35565b9150610e3a83610b35565b9250828202610e4881610b35565b91508282048414831517610e5f57610e5e610c69565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ea082610b35565b9150610eab83610b35565b925082610ebb57610eba610e66565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610ee581610ec6565b8114610ef057600080fd5b50565b600081519050610f0281610edc565b92915050565b6000819050919050565b610f1b81610f08565b8114610f2657600080fd5b50565b600081519050610f3881610f12565b92915050565b600081519050610f4d81610b69565b92915050565b600080600080600060a08688031215610f6f57610f6e610ac5565b5b6000610f7d88828901610ef3565b9550506020610f8e88828901610f29565b9450506040610f9f88828901610f3e565b9350506060610fb088828901610f3e565b9250506080610fc188828901610ef3565b9150509295509295909350565b6000610fd982610f08565b9150610fe483610f08565b9250828202610ff281610f08565b91507f8000000000000000000000000000000000000000000000000000000000000000841460008412161561102a57611029610c69565b5b828205841483151761103f5761103e610c69565b5b509291505056fea2646970667358221220bb11a1a7fcff760c59164571f40a50ad3bd30537f55dfc8e1933ed0208f3941e64736f6c63430008110033",
  "devdoc": {
    "author": "Shlan",
    "details": "This implements price feeds as our library",
    "kind": "dev",
    "methods": {},
    "title": "A sample Funding Contract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "fund()": {
        "notice": "Funds our contract based on the ETH/USD price"
      }
    },
    "notice": "This contract is for creating a sample funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 59,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 74,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}